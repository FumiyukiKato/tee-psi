syntax = "proto3";

package Messages;

service ContactTracer {
	rpc JudgeContact(stream JudgeContactRequest) returns (stream JudgeContactResponse) {}
}

message JudgeContactRequest {
	oneof action {
		InitialMessage initial_message = 1;
		MessageMsg0 msg0 = 2;
		MessageMSG2 msg2 = 3;
		AttestationMessage attestation_message = 4;
		MessagePsiHashData message_psi_hash_data = 5;
		MessagePsiHashDataFinished message_psi_hash_data_finished = 6;
	}
}

message JudgeContactResponse {
	oneof action {
		MessageMsg0 msg0 = 1;
		MessageMSG1 msg1 = 2;
		MessageMSG3 msg3 = 3;
		MessagePsiSalt message_psi_salt = 4;
		MessagePsiResult message_psi_result = 5;
		MessagePsiIntersect message_psi_intersect = 6;
	}
}

message InitialMessage {
	uint32 type = 1;
	uint32 size = 2;
}

message MessageMsg0 {
	uint32 type = 1;
	uint32 epid = 2;
	uint32 status = 3;
}

message MessageMSG1 {
	uint32 type = 1;
	uint32 context = 2;
	repeated uint32 GaX = 3 [packed=true];
	repeated uint32 GaY = 4 [packed=true];
	repeated uint32 GID = 5 [packed=true];
}

message MessageMSG2 {
	uint32 type = 1;
	uint32 size = 2;
	uint32 context = 3;
	repeated uint32 public_key_gx = 4 [packed=true];
	repeated uint32 public_key_gy = 5 [packed=true];
	uint32 quote_type = 6;
	repeated uint32 spid = 7 [packed=true];
	uint32 cmac_kdf_id = 8;
	repeated uint32 signature_x = 9 [packed=true];
	repeated uint32 signature_y = 10 [packed=true];
	repeated uint32 smac = 11 [packed=true];
	uint32 size_sigrl = 12;
	repeated uint32 sigrl = 13 [packed=true];
}

message MessageMSG3 {
	uint32 type = 1;
	uint32 size = 2;
	uint32 context = 3;
	repeated uint32 sgx_mac = 4 [packed=true];
	repeated uint32 gax_msg3 = 5 [packed=true];
	repeated uint32 gay_msg3 = 6 [packed=true];
	repeated uint32 sec_property = 7 [packed=true];
	repeated uint32 quote = 8 [packed=true];
}

message AttestationMessage {
	uint32 type = 1;
	uint32 size = 2;
	uint32 context = 3;
	uint32 mode = 4;

	uint32 epid_group_status = 5;
	uint32 tcb_evaluation_status = 6;
	uint32 pse_evaluation_status = 7;
	repeated uint32 latest_equivalent_tcb_psvn = 8 [packed=true];
	repeated uint32 latest_pse_isvsvn = 9 [packed=true];
	repeated uint32 latest_psda_svn = 10 [packed=true];
	repeated uint32 performance_rekey_gid = 11 [packed=true];
	repeated uint32 ec_sign256_x = 12 [packed=true];
	repeated uint32 ec_sign256_y = 13 [packed=true];
	repeated uint32 mac_smk = 14 [packed=true];

	uint32 result_size = 15;
	repeated uint32 reserved = 16 [packed=true];
	repeated uint32 payload_tag = 17 [packed=true];
	repeated uint32 payload = 18 [packed=true];
}

message MessagePsiSalt {
	uint32 type = 1;
	uint32 size = 2;

	uint32 context = 3;
	uint32 id = 4;
	uint32 state = 5;
	repeated uint32 mac = 6 [packed=true];
	repeated uint32 salt = 7 [packed=true];
}

message MessagePsiHashData {
	uint32 type = 1;
	uint32 size = 2;

	uint32 mode = 3;
	uint32 context = 4;
	uint32 id = 5;
	repeated uint32 mac = 6 [packed=true];
	repeated uint32 data = 7 [packed=true];
}

message MessagePsiHashDataFinished {
	uint32 type    = 1;
	uint32 size    = 2;

	uint32 mode    = 3;
	uint32 context = 4;
	uint32 id      = 5;
}

message MessagePsiResult {
	uint32 type = 1;
	uint32 size = 2;

	uint32 context = 3;
	uint32 id = 4;
	uint32 state = 5;
}

message MessagePsiIntersect {
	uint32 type = 1;
	uint32 size = 2;

	uint32 context = 3;
	uint32 id = 4;
	repeated uint32 mac = 5 [packed=true];
	repeated uint32 data = 6 [packed=true];
}